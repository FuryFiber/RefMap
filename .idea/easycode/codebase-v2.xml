<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/src/core/map.rs;/home/flor/Documents/dev/refmap/src/core/mod.rs;/home/flor/Documents/dev/refmap/src/core/pdfparser.rs;/home/flor/Documents/dev/refmap/src/core/storage.rs;/home/flor/Documents/dev/refmap/src/core/undo.rs;/home/flor/Documents/dev/refmap/src/app.rs;/home/flor/Documents/dev/refmap/src/main.rs;/home/flor/Documents/dev/refmap/test.json" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;/home/flor/Documents/dev/refmap&quot;:&quot;{\&quot;/src/core/storage.rs\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`save_map`: Saves a `MindMap` to a file at the specified path.\\n\\n`load_map`: Loads a `MindMap` from a file at the specified path.\\n\\nThis file provides utility functions for saving and loading a `MindMap` to and from a file using the `serde_json` library.\&quot;,\&quot;/src/core/pdfparser.rs\&quot;:\&quot;This file defines a `Metadata` struct and an associated `from_file` function.\\n\\n`Metadata`: A struct that represents the metadata of a PDF file, including the title, keywords, authors, creation date, and file path.\\n\\n`from_file`: A function that takes a file path as input and returns a `Metadata` struct containing the metadata extracted from the PDF file using the `pdfinfo` command.\&quot;,\&quot;/src/core/map.rs\&quot;:\&quot;This file defines a data structure for a mind map, which is a graphical representation of ideas and their relationships. The file contains the following classes and functions:\\n\\n`Node`: A node in the mind map, representing a piece of information, with a title, metadata, position, and other properties.\\n\\n`Edge`: A connection between two nodes in the mind map.\\n\\n`MindMap`: The main data structure that holds the nodes and edges of the mind map, and provides methods to add, remove, and manipulate the nodes and edges.\\n\\n`add_node`: Adds a new node to the mind map with the given title, position, and metadata.\\n\\n`add_pdf_node`: Adds a new node to the mind map based on the metadata extracted from a PDF file.\\n\\n`add_edge`: Adds a new edge between two nodes in the mind map.\\n\\n`remove_node`: Removes a node and all its associated edges from the mind map.\&quot;,\&quot;/test.json\&quot;:\&quot;This file appears to be a JSON representation of a graph data structure, which consists of nodes and edges. It does not contain any classes or functions. The file represents a graph with three nodes and three edges connecting them. The nodes have metadata associated with them, such as a title, keywords, authors, and a file path. The edges represent relationships between the nodes. This file seems to be used for visualizing and analyzing a graph-based data structure, potentially in the context of a research paper or a project related to Internet of Things, wireless sensor networks, or cyber-physical systems.\&quot;,\&quot;/src/app.rs\&quot;:\&quot;This file contains the implementation of the `MindMapApp` struct and its associated methods. It provides a mind mapping application built using the `egui` library.\\n\\n`MindMapApp`: A struct that represents the state and functionality of the mind mapping application.\\n\\n`MindMapApp::menu_bar`: Renders the menu bar with options for creating a new map, opening an existing map, and saving the current map.\\n\\n`MindMapApp::default`: The default implementation for the `MindMapApp` struct, which initializes the mind map and other state variables.\\n\\n`MindMapApp::update`: The main update function that handles user interactions, rendering the mind map, and managing the application state.\\n\\n`point_line_distance`: A helper function that calculates the distance between a point and a line segment.\&quot;,\&quot;/src/core/undo.rs\&quot;:\&quot;There are no classes or functions in the provided document. The document appears to be an empty XML document, which does not contain any meaningful content.\&quot;,\&quot;/src/core/mod.rs\&quot;:\&quot;This file appears to be a Rust module that defines a `MindMap` data structure and related functionality. It does not contain any explicit class definitions, but rather defines several modules and functions. Here\\u0027s a summary of the contents:\\n\\n`map`: This module likely contains the implementation of the `MindMap` data structure and related operations.\\n\\n`storage`: This module likely handles the storage and persistence of `MindMap` data.\\n\\n`pdfparser`: This module is likely responsible for parsing PDF documents and extracting information to be used in the `MindMap` data structure.\\n\\n`MindMap`: This is the main data structure provided by this module, which likely represents a mind map or similar hierarchical data structure.\&quot;,\&quot;/src/main.rs\&quot;:\&quot;This file does not contain any classes or functions. Instead, it sets up the main entry point for a mind map application using the `eframe` crate. The `main` function initializes the application with default options and runs the native application loop, passing in a new instance of the `MindMapApp` as the application state.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;/home/flor/Documents/dev/refmap&quot;:&quot;{\&quot;/src/core/map.rs\&quot;:{\&quot;file_path\&quot;:\&quot;/src/core/map.rs\&quot;,\&quot;file_name\&quot;:\&quot;map.rs\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/core/mod.rs\&quot;:{\&quot;file_path\&quot;:\&quot;/src/core/mod.rs\&quot;,\&quot;file_name\&quot;:\&quot;mod.rs\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/core/pdfparser.rs\&quot;:{\&quot;file_path\&quot;:\&quot;/src/core/pdfparser.rs\&quot;,\&quot;file_name\&quot;:\&quot;pdfparser.rs\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/core/storage.rs\&quot;:{\&quot;file_path\&quot;:\&quot;/src/core/storage.rs\&quot;,\&quot;file_name\&quot;:\&quot;storage.rs\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/core/undo.rs\&quot;:{\&quot;file_path\&quot;:\&quot;/src/core/undo.rs\&quot;,\&quot;file_name\&quot;:\&quot;undo.rs\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/app.rs\&quot;:{\&quot;file_path\&quot;:\&quot;/src/app.rs\&quot;,\&quot;file_name\&quot;:\&quot;app.rs\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main.rs\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main.rs\&quot;,\&quot;file_name\&quot;:\&quot;main.rs\&quot;,\&quot;methods\&quot;:[]},\&quot;/test.json\&quot;:{\&quot;file_path\&quot;:\&quot;/test.json\&quot;,\&quot;file_name\&quot;:\&quot;test.json\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>